{"version":3,"file":"static/js/773.0194395d.chunk.js","mappings":"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","sources":["components/Layout/Layout.styled.js","components/FormAut/FormAut.styled.js","components/FormAut/Register.jsx","components/toastify.js","components/FormAut/Login.jsx","components/Layout/Layout.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","config/firebase-config.js","helpers/emailRegexp.js","helpers/error-messages.js","helpers/useModal.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Header = styled.header`\n  padding: 20px 64px 15px 64px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ImgLogo = styled.img``;\n\nexport const TitleLogo = styled.p`\n  color: var(--main-text-color);\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const Nav = styled.nav``;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 28px;\n`;\n\nexport const Navigate = styled(NavLink)`\n  color: var(--main-text-color);\n  font-size: 16px;\n  line-height: 1.25;\n  transition: color var(--transition);\n\n  &:hover,\n  :focus {\n    color: var(--active-color);\n  }\n\n  &.active {\n    color: #8a8a89;\n  }\n`;\n\nexport const WrapperAut = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const ButtonLogin = styled.button`\n  cursor: pointer;\n  color: var(--main-text-color);\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.25;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-decoration-color: transparent;\n  transition: text-decoration var(--transition),\n    text-decoration-color var(--transition);\n\n  & span {\n    display: inherit;\n    transition: color var(--transition);\n  }\n\n  &:hover,\n  :focus {\n    & span {\n      color: var(--active-color);\n    }\n    text-decoration: underline;\n    text-underline-position: under;\n    text-decoration-color: var(--active-color);\n  }\n`;\n\nexport const ButtonRegister = styled.button`\n  cursor: pointer;\n  padding: 14px 39px;\n  max-width: 166px;\n  border: none;\n  border-radius: 12px;\n  background-color: #121417;\n  transition: background-color var(--transition), color var(--transition);\n\n  color: #fff;\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.25;\n\n  &:hover,\n  :focus {\n    background-color: var(--active-color);\n    color: var(--main-text-color);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  width: 566px;\n  max-width: 100%;\n  padding: 64px;\n`;\n\nexport const Title = styled.h3`\n  color: var(--main-text-color);\n  font-size: 40px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.8px;\n`;\n\nexport const Description = styled.p`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  color: rgba(18, 20, 23, 0.8);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.37;\n`;\n\nexport const Form = styled.form`\n  display: block;\n`;\n\nexport const Input = styled.input`\n  border-radius: 12px;\n  width: 100%;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  padding: 16px 18px;\n  color: var(--main-text-color);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.37;\n  display: block;\n  outline: none;\n  transition: border var(--transition);\n\n  &::placeholder {\n    color: var(--main-text-color);\n  }\n  &:focus {\n    border: 1px solid var(--active-button-background-color);\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  color: #ff0000c2;\n  margin-top: 5px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.37;\n`;\n\nexport const InputWrapper = styled.div`\n  &:not(:first-child) {\n    margin-top: 18px;\n  }\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PasswordVisibility = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 18px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: block;\n  color: var(--main-text-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n\n  border-radius: 12px;\n  background-color: var(--button-background-color);\n  border: none;\n  width: 100%;\n  padding: 16px 0;\n  margin: 40px auto 0;\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--active-button-background-color);\n  }\n`;\n","import { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport {\n  Description,\n  ErrorMessage,\n  Form,\n  FormWrapper,\n  Input,\n  Title,\n  Button,\n  InputWrapper,\n  PasswordVisibility,\n  PasswordWrapper,\n} from './FormAut.styled';\nimport { emailRegexp } from 'helpers/emailRegexp';\nimport { ERROR_MESSAGES } from 'helpers/error-messages';\nimport { auth } from 'config/firebase-config';\nimport { useDispatch } from 'react-redux';\nimport { addToken } from 'redux/sliceAuth';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, ERROR_MESSAGES.MIN_NAME)\n    .max(50, ERROR_MESSAGES.MAX_NAME)\n    .required(ERROR_MESSAGES.REQUIRED_NAME),\n  email: Yup.string()\n    .matches(emailRegexp, ERROR_MESSAGES.INVALID_EMAIL)\n    .required(ERROR_MESSAGES.REQUIRED_EMAIL),\n  password: Yup.string()\n    .min(6, ERROR_MESSAGES.MIN_PASSWORD)\n    .required(ERROR_MESSAGES.REQUIRED_PASSWORD),\n});\n\nexport const Register = ({ onClose }) => {\n  const [visibility, setVisibility] = useState(false);\n  const dispatch = useDispatch();\n\n  const handelSubmit = async values => {\n    const { email, password } = values;\n    try {\n      const result = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      // await addDoc(collection(db, 'users'), {\n      //   name,\n      //   email,\n      //   id: result.user.uid,\n      // });\n\n      dispatch(addToken(result.user.accessToken));\n      onClose();\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Title>Registration</Title>\n      <Description>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information\n      </Description>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={handelSubmit}\n      >\n        {({\n          errors,\n          touched,\n          handleSubmit,\n          isSubmitting,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <InputWrapper>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n              />\n              {errors.name && touched.name ? (\n                <ErrorMessage>* {errors.name}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <ErrorMessage>* {errors.email}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <PasswordWrapper>\n                <Input\n                  name=\"password\"\n                  type={visibility ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.password}\n                />\n                <PasswordVisibility\n                  type=\"button\"\n                  onClick={() => setVisibility(!visibility)}\n                >\n                  {visibility ? <FiEyeOff /> : <FiEye />}\n                </PasswordVisibility>\n              </PasswordWrapper>\n              {errors.password && touched.password ? (\n                <ErrorMessage>* {errors.password}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import 'react-toastify/dist/ReactToastify.css';\nimport { Flip } from 'react-toastify';\n\nexport const styleToastify = {\n  position: 'bottom-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n  transition: Flip,\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport {\n  Description,\n  ErrorMessage,\n  Form,\n  FormWrapper,\n  Input,\n  Title,\n  Button,\n  PasswordVisibility,\n  InputWrapper,\n  PasswordWrapper,\n} from './FormAut.styled';\nimport { emailRegexp } from 'helpers/emailRegexp';\nimport { ERROR_MESSAGES } from 'helpers/error-messages';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from 'config/firebase-config';\nimport { addToken } from 'redux/sliceAuth';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { styleToastify } from 'components/toastify';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(emailRegexp, ERROR_MESSAGES.INVALID_EMAIL)\n    .required(ERROR_MESSAGES.REQUIRED_EMAIL),\n  password: Yup.string()\n    .min(6, ERROR_MESSAGES.MIN_PASSWORD)\n    .required(ERROR_MESSAGES.REQUIRED_PASSWORD),\n});\n\nexport const Login = ({ onClose }) => {\n  const [visibility, setVisibility] = useState(false);\n  const dispatch = useDispatch();\n\n  const handelSubmit = async values => {\n    const { email, password } = values;\n    try {\n      const credentials = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n\n      dispatch(addToken(credentials.user.accessToken));\n      onClose();\n      return credentials.user;\n    } catch (error) {\n      toast.error(\n        'Oops something went wrong, check if you entered the data correctly',\n        styleToastify\n      );\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Title>Log In</Title>\n      <Description>\n        Welcome back! Please enter your credentials to access your account and\n        continue your search for an teacher.\n      </Description>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={handelSubmit}\n      >\n        {({\n          errors,\n          touched,\n          handleSubmit,\n          isSubmitting,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <InputWrapper>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <ErrorMessage>* {errors.email}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <PasswordWrapper>\n                <Input\n                  name=\"password\"\n                  type={visibility ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.password}\n                />\n                <PasswordVisibility\n                  type=\"button\"\n                  onClick={() => setVisibility(!visibility)}\n                >\n                  {visibility ? <FiEyeOff /> : <FiEye />}\n                </PasswordVisibility>\n              </PasswordWrapper>\n              {errors.password && touched.password ? (\n                <ErrorMessage>* {errors.password}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Log In\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import { Container } from 'globalStyles';\nimport { Outlet } from 'react-router-dom';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Suspense, useEffect, useState } from 'react';\nimport ukraine from '../../assets/img/ukraine.jpg';\nimport {\n  ButtonLogin,\n  ButtonRegister,\n  Header,\n  HeaderContainer,\n  ImgLogo,\n  List,\n  Nav,\n  Navigate,\n  TitleLogo,\n  WrapperAut,\n  WrapperLogo,\n} from './Layout.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useModal } from 'helpers/useModal';\nimport { ModalComponent } from 'components/Modal/Modal';\nimport { Register } from 'components/FormAut/Register';\nimport { Login } from 'components/FormAut/Login';\nimport { auth } from 'config/firebase-config';\nimport { signOut } from 'firebase/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteToken } from 'redux/sliceAuth';\n\nconst Layout = () => {\n  const { isOpen, openModal, closeModal } = useModal();\n  const [user, setUser] = useState(null);\n  const authUser = useSelector(state => state.authUser.token);\n  const dispatch = useDispatch();\n\n  const clickLogOut = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n\n      dispatch(deleteToken());\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(maybeUser => {\n      const user = auth.currentUser;\n\n      if (authUser || user) {\n        return setUser(maybeUser);\n      }\n      return;\n    });\n  }, [authUser]);\n\n  return (\n    <>\n      <Header>\n        <Container>\n          <HeaderContainer>\n            <WrapperLogo>\n              <ImgLogo\n                src={ukraine}\n                alt=\"Flag Ukraine\"\n                width=\"28\"\n                height=\"28\"\n              />\n              <TitleLogo>LearnLingo</TitleLogo>\n            </WrapperLogo>\n            <Nav>\n              <List>\n                <li>\n                  <Navigate activeclassname=\"active\" to=\"/\">\n                    Home\n                  </Navigate>\n                </li>\n                <li>\n                  <Navigate to=\"teachers\">Teachers</Navigate>\n                </li>\n                {authUser && (\n                  <li>\n                    <Navigate to=\"favorite\">Favorite</Navigate>\n                  </li>\n                )}\n              </List>\n            </Nav>\n            {!authUser && (\n              <WrapperAut>\n                <li>\n                  <ButtonLogin type=\"button\" onClick={() => openModal('login')}>\n                    <span>\n                      <FiLogIn />\n                    </span>\n                    Log in\n                  </ButtonLogin>\n                </li>\n                <li>\n                  <ButtonRegister\n                    type=\"button\"\n                    onClick={() => openModal('register')}\n                  >\n                    Register\n                  </ButtonRegister>\n                </li>\n              </WrapperAut>\n            )}\n            {authUser && user && (\n              <ButtonRegister type=\"button\" onClick={clickLogOut}>\n                Log out\n              </ButtonRegister>\n            )}\n          </HeaderContainer>\n        </Container>\n        {isOpen.open && isOpen.name === 'login' && (\n          <ModalComponent onClose={closeModal}>\n            <Login onClose={closeModal} />\n          </ModalComponent>\n        )}\n        {isOpen.open && isOpen.name === 'register' && (\n          <ModalComponent onClose={closeModal}>\n            <Register onClose={closeModal} />\n          </ModalComponent>\n        )}\n      </Header>\n      <main>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n    90deg,\n    rgb(116 115 115) 0%,\n    rgb(83 81 81 / 32%) 0%\n  );\n  backdrop-filter: blur(0.1rem);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 30px;\n  overflow: hidden;\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  transition: color var(--transition);\n  color: #121417;\n  &:hover,\n  :focus {\n    color: var(--active-button-background-color);\n  }\n\n  & svg {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { ButtonClose, Modal, Overlay } from './Modal.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.getElementById('modal');\n\nexport const ModalComponent = ({ children, onClose }) => {\n  const onClickOverlay = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Overlay onClick={onClickOverlay}>\n      <Modal>\n        <ButtonClose type=\"button\" onClick={onClose}>\n          <AiOutlineClose />\n        </ButtonClose>\n        {children}\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase } from 'firebase/database';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst AUTHDOMAIN = process.env.AUTHDOMAIN;\nconst APPID = process.env.APPID;\nconst MEASUREMENTID = process.env.MEASUREMENTID;\nconst MESSAGINGSENDERID = process.env.MESSAGINGSENDERID;\n\nconst firebaseConfig = {\n  apiKey: API_KEY,\n  authDomain: AUTHDOMAIN,\n  projectId: 'learn-lingo-f345f',\n  storageBucket: 'learn-lingo-f345f.appspot.com',\n  messagingSenderId: MESSAGINGSENDERID,\n  appId: APPID,\n  measurementId: MEASUREMENTID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n\nexport const database = getDatabase();\n","export const emailRegexp =\n  /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\n","export const ERROR_MESSAGES = {\n  MIN_NAME: 'Name must contain at least 3 characters',\n  MAX_NAME: 'Too Long!',\n  REQUIRED_NAME: 'Name required',\n  INVALID_EMAIL: 'Invalid email',\n  REQUIRED_EMAIL: 'Email required',\n  MIN_PHONE: 'This is an ERROR phone number (Ukrainian format)',\n  REQUIRED_PHONE: 'Enter the phone number in Ukrainian format',\n  MIN_PASSWORD: 'Password must contain at least 6 characters',\n  REQUIRED_PASSWORD: 'Password required',\n};\n","import { useEffect, useState } from 'react';\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState({\n    name: '',\n    open: false,\n  });\n\n  const openModal = name => {\n    setIsOpen({ name, open: true });\n  };\n\n  const closeModal = () => {\n    setIsOpen({ name: '', open: false });\n  };\n\n  useEffect(() => {\n    if (isOpen.open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n  }, [isOpen]);\n\n  return {\n    isOpen,\n    openModal,\n    closeModal,\n  };\n};\n"],"names":["Header","styled","header","_templateObject","_taggedTemplateLiteral","HeaderContainer","div","_templateObject2","WrapperLogo","_templateObject3","ImgLogo","img","_templateObject4","TitleLogo","p","_templateObject5","Nav","nav","_templateObject6","List","ul","_templateObject7","Navigate","NavLink","_templateObject8","WrapperAut","_templateObject9","ButtonLogin","button","_templateObject10","ButtonRegister","_templateObject11","FormWrapper","Title","h3","Description","Form","form","Input","input","ErrorMessage","InputWrapper","PasswordWrapper","PasswordVisibility","Button","SignupSchema","Yup","shape","name","min","ERROR_MESSAGES","MIN_NAME","max","MAX_NAME","required","REQUIRED_NAME","email","matches","emailRegexp","INVALID_EMAIL","REQUIRED_EMAIL","password","MIN_PASSWORD","REQUIRED_PASSWORD","Register","_ref","onClose","visibility","setVisibility","useState","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","async","values","result","createUserWithEmailAndPassword","auth","addToken","user","accessToken","error","_ref2","errors","touched","handleSubmit","isSubmitting","handleBlur","handleChange","type","placeholder","onChange","onBlur","value","onClick","FiEyeOff","FiEye","disabled","styleToastify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Flip","Login","credentials","signInWithEmailAndPassword","toast","Layout","isOpen","openModal","closeModal","useModal","setUser","authUser","useSelector","state","token","useEffect","onAuthStateChanged","maybeUser","currentUser","_Fragment","Container","src","alt","width","height","activeclassname","to","FiLogIn","signOut","deleteToken","open","ModalComponent","Suspense","fallback","Loader","Outlet","Overlay","Modal","ButtonClose","modalRoot","document","getElementById","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","AiOutlineClose","firebaseConfig","apiKey","process","authDomain","AUTHDOMAIN","projectId","storageBucket","messagingSenderId","MESSAGINGSENDERID","appId","APPID","measurementId","MEASUREMENTID","app","initializeApp","getAuth","database","getDatabase","MIN_PHONE","REQUIRED_PHONE","setIsOpen","body","style","overflow"],"sourceRoot":""}